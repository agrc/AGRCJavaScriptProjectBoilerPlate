name: Node.js CI

on:
  push:
    paths:
      - "src/**"
      - ".github/workflows/nodejs.yaml"
      - "package.json"
      - "cypress/**"
      - "cypress.json"

jobs:
  test-unit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - run: npm ci

      - run: npm test -- --watchAll=false

  test-functional:
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      REACT_APP_DISCOVER: ${{ secrets.REACT_APP_DISCOVER }}
      REACT_APP_PRINT_PROXY: ${{ secrets.REACT_APP_PRINT_PROXY }}
      REACT_APP_WEB_API: ${{ secrets.REACT_APP_WEB_API }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:no-env
          wait-on: 'http://localhost:3000'

  deploy-prod:
    needs: [test-unit, test-functional]
    environment:
      name: prod
      url: https://atlas.utah.gov
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build:ci
        env:
          REACT_APP_DISCOVER: ${{ secrets.REACT_APP_DISCOVER }}
          REACT_APP_WEB_API: ${{ secrets.REACT_APP_WEB_API }}
          REACT_APP_PRINT_PROXY: ${{ secrets.REACT_APP_PRINT_PROXY }}

      - name: Firebase Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.SERVICE_ACCOUNT }}'
          channelId: live
          projectId: '${{ secrets.PROJECT_ID }}'
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Cache firebase
        uses: actions/cache@v2
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [test-unit, test-functional]
    environment:
      name: dev
      url: https://atlas.dev.utah.gov
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build:ci
        env:
          REACT_APP_DISCOVER: ${{ secrets.REACT_APP_DISCOVER }}
          REACT_APP_WEB_API: ${{ secrets.REACT_APP_WEB_API }}
          REACT_APP_PRINT_PROXY: ${{ secrets.REACT_APP_PRINT_PROXY }}

      - name: Firebase Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.SERVICE_ACCOUNT }}'
          channelId: live
          projectId: '${{ secrets.PROJECT_ID }}'
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Cache firebase
        uses: actions/cache@v2
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-
